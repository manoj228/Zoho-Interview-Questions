Eg 1: Input: 13,2 4,15,12,10,5
 Output: 13,2,12,10,5,15,4
Eg 2: Input: 1,2,3,4,5,6,7,8,9
 Output: 9,2,7,4,5,6,3,8,1 



Solution 1 :
Time complexity : O(n^2)
space complexity: O(1)
#include <bits/stdc++.h>
using namespace std;

int main() {
   vector<int> a{ 13,2,4,15,12,10,5};
    
    int n = a.size();
    
    for(int i=0; i<n-1; i++)
    {
    	for(int j=i+1; j<n; j++)
    	{
    		if(i & 1)
    		{
    			if(a[i] > a[j]) swap(a[i], a[j]);
    		}
    		
    		else {
    			if(a[i] < a[j]) swap(a[i],a[j]);
    		}
    	}
    }
    for(int i=0; i<n; i++) cout << a[i] << " "; cout << endl;
    
		
	return 0;
}

Solution 2 :
Time complexity : O(nlogn)
space complexity: O(1)
#include <bits/stdc++.h>
using namespace std;

int main() {
   vector<int> a{ 13,2,4,15,12,10,5};
    
    int n = a.size();
    
    sort(a.begin(), a.end());
    
    int i = 0 , j = n-1;
    while(i < j)
    {
    	if(a[i] < a[j]) 
    	swap(a[i++], a[j]);
    	
    	if(a[i] > a[j])
    	swap(a[i++],a[j--]);
    }
    
    for(int i=0; i<n; i++) cout << a[i] << " "; cout << endl;
    
		
	return 0;
}

 
